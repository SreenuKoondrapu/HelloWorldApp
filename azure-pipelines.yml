trigger:
- '*'
pool:
  name: 'MyAgentPool' 
  
variables: 
  group: 'Release'
  imageRepository: 'helloworlddotnetwebapp'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET SDK 8.x'
  inputs:
    packageType: sdk
    version: '8.x'
    includePreviewVersions: true

- task: SonarCloudPrepare@1
  condition: false
  inputs:
    SonarCloud: 'sonartokenforazuredevops'
    organization: 'sreenukoondrapukey'
    scannerMode: 'MSBuild'
    projectKey: 'SreenuKoondrapu_HelloWorldWebApp'
    projectName: 'HelloWorldWebApp'
# SNYK SECURITY TESTING FOR SAST, SCA AND CONTAINER 
- task: SnykSecurityScan@1
  condition: false
  displayName: Snyk SAST Testing Step
  inputs:
    serviceConnectionEndpoint: 'helloworldsnykconnection'
    testType: 'code'
    failOnIssues: false

- task: SnykSecurityScan@1
  condition: false
  displayName: 'Snyk SCA Testing Step'
  inputs:
    serviceConnectionEndpoint: 'helloworldsnykconnection'
    testType: 'app'
    failOnIssues: false

- task: SnykSecurityScan@1
  inputs:
    serviceConnectionEndpoint: 'helloworldsnykconnection'
    testType: 'container'
    dockerImageName: 'helloworlddotnetwebapp'
    dockerfilePath: $(dockerfilePath)
    monitorWhen: 'always'
    failOnIssues: true
# END OF SNYK COMPONENTS FOR SECURITY TESTING

- task: Docker@2
  condition: false
  displayName: Build and push an image to container registry
  inputs:
    command: buildAndPush
    repository: $(imageRepository)
    dockerfile: $(dockerfilePath)
    containerRegistry: 'HW Container Registry Connection'
    tags: |
      $(tag)

- task: DotNetCoreCLI@2
  condition: false
  displayName: 'Build step'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  condition: false
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  condition: false
  displayName: 'Publish step'
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

- task: CopyFiles@2
  condition: true
  displayName: 'Copy Terraform files to artifacts'
  inputs:
    SourceFolder: Terraform
    TargetFolder: '$(build.artifactstagingdirectory)/Terraform'

- task: PublishBuildArtifacts@1
  condition: false
  displayName: 'Build Artifact Step'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'HelloWorldAppDrop'

- task: SonarCloudAnalyze@1
  condition: false
  inputs:
    jdkversion: 'JAVA_HOME_17_X64'

- task: SonarCloudPublish@1
  condition: false
  inputs:
    pollingTimeoutSec: '300'

- task: AzureWebApp@1
  condition: false
  displayName: 'Azure App Service Deploy: website'
  inputs:
    azureSubscription: 'Resource Manager - HELLOWORLD'
    appName: 'HelloWorldAppService17042024'
    package: '$(Build.artifactstagingdirectory)/*.zip'